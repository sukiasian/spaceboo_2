import { useState } from 'react';

interface IAppointmentsClassificationTab {
    tabName: string;
}

export default function MyAppointmentsPage(): JSX.Element {
    // мы должны подтягивать бронирования пользователя.
    // подтягивать пространства пользователей в которых у них есть предстоящие брони (то есть дата начала больше чем сейчас)

    // Брони: предстоящие, настоящие ( в которых дата сейчас имеет точку пересечения и прошедшие - то есть нужно сделать 3 таба)
    const appointmentsClassificationTabs = [
        {
            tabName: 'Активные',
        },
        {
            tabName: 'Предстоящие',
        },
        {
            tabName: 'Прошедшие',
        },
    ];
    const [activeTab, setActiveTab] = useState(appointmentsClassificationTabs[0].tabName);
    const applyEffectsOnInit = (): void => {
        // если есть активные то их отображает первыми.
        // если есть предстоящие но нет активных то отображает предстоящие.
        // если же есть только прошедшие
        // как это должно делаться - на фронте или на бэке? пока что плюсы в копилку для бэкенда
        /* 
        1. один роут для выдачи userAppointments - и выдать в качестве data 
        { 
            active: ..., 
            upcoming: ..., 
            past: ... 
        } 

        2. сделать  3 разных роута и на каждый делать запрос при переходе по каждому из табов. 
        
        
        я склоняюсь к первому варианту. или же нужно отправлять 1 запрос как то форкая (как это делается в промис алл).
        
        */
    };

    return <> </>;
}
